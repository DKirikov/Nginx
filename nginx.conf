
#user  nobody;
worker_processes  1;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
	proxy_ignore_client_abort on;
	proxy_buffering off;
	
upstream TestServer
{
    server 127.0.0.1:9995; #ubuntu
    #server unknownaddress4.com; #windows
}

upstream SmartBackend0
{
    server unknownaddress0.com;
}

upstream SmartBackend1
{
    server unknownaddress1.com;
}

map $cookie_sm $SmartBackend
{
	# Default value:
	default http://SmartBackend0;

	# Exact match:
	sm1 http://SmartBackend1;
}

upstream DataProviderServer
{
    server unknownaddress3.com;
    #server 127.0.0.1:8800;
}


    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    #sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    #keepalive_timeout  65;

    #gzip  on;

server {
        listen       80;
        #listen       9000;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
			root   C://Projects/Examples/Example;
            index  index.html;
        }

        location /SomeExample {
			alias  C://Projects/Examples/Example;
            index  SomeExample.html;
        }

		location /User {
	    	proxy_pass http://TestServer;
		    proxy_set_header Host $host;
		    proxy_set_header X-Real-IP $remote_addr;
		    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    }

		location /help {
	    	proxy_pass http://TestServer;
		    proxy_set_header Host $host;
		    proxy_set_header X-Real-IP $remote_addr;
		    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}

		location /api/db {
		    proxy_pass http://TestServer;
	    	proxy_set_header Host $host;
		    proxy_set_header X-Real-IP $remote_addr;
		    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}


		location /api {
		    proxy_pass http://TestServer;
            proxy_set_header Host $host;
	    	proxy_set_header X-Real-IP $remote_addr;
		    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}

		location ~* .(jst.ejs)$ {
		    proxy_pass http://TestServer;
	    	proxy_set_header Host $host;
		    proxy_set_header X-Real-IP $remote_addr;
		    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}

		location ~* .(SignIn.html)$ {
		    proxy_pass http://TestServer;
		    proxy_set_header Host $host;
		    proxy_set_header X-Real-IP $remote_addr;
		    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}

        location /aaa
		{
		    proxy_pass http://DataProviderServer;
        }
    
		location /bbb
        {
		    proxy_pass http://DataProviderServer;
		}

        location /aaa/tile
        {
		    proxy_pass http://DataProviderServer;
        }    

        location /bbb/tile
		{
		    proxy_pass http://DataProviderServer;
        }

		location /sb/
		{
			rewrite ^/sb(.*) $1 break;
			proxy_pass $SmartBackend;
		}


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
